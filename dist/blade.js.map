{"version":3,"file":null,"sources":["../src/parser/header.js","../src/parser/table.js","../src/parser/paragraph.js","../src/parser/space.js","../src/blade.js"],"sourcesContent":["/**\n * header 1~6\n * @param  {[type]} content [description]\n * @return {[type]}         [description]\n */\nexport default ( content ) => {\n    let setextHeader1 = /^(.*)\\r?\\n(={5,})$/gm;                 // setext style header 1\n    let setextHeader2 = /^(.*)\\r?\\n(-{5,})$/gm;                 // setext style header 2\n\n    for ( let i = 6; i >= 1; i-- ) {\n        let atx = `^(#{${i}})([^#]+.*?)((#{${i}})?$)`;          // atx header\n        let regex = new RegExp( atx, \"gm\" );\n        content = content.replace( regex, ( $0, $1, $2, index, str ) => {\n            return `<h${i}>${$2}</h${i}>`;\n        });\n    }\n    content = content.replace( setextHeader1, ( $0, $1, $2, index, str ) => {\n        return `<h1>${$1}</h1>`;\n    });\n    content = content.replace( setextHeader2, ( $0, $1, $2, index, str) => {\n        return `<h2>${$1}</h2>`;\n    });\n    return content;\n};\n","/**\n * table\n * @return {[type]} [description]\n */\nexport default ( content ) => {\n\n};\n","export default ( content ) => {\n    let regex = /^(.*)$/gm;\n    content = content.replace( regex, ( $0, $1 ) => {\n        return `<p>${$1}</p>`;\n    });\n    return content;\n};\n","export default ( content ) => {\n    let regex = /^$/gm;\n    content.replace( regex, ( $0 ) => {\n        return \"<br>\";\n    });\n    return content;\n};\n","import config from \"./blade.config\";\nimport header from \"./parser/header\";\nimport table from \"./parser/table\";\nimport paragraph from \"./parser/paragraph\";\nimport space from \"./parser/space\";\n\nexport default ( content ) => {\n    content += \"\\r\\n\";\n    content = header( content );\n    // content = table( content );\n    content = paragraph( content );\n    content = space( content );\n    return content;\n};\n"],"names":["content","setextHeader1","setextHeader2","i","atx","regex","RegExp","replace","$0","$1","$2","index","str","header","paragraph","space"],"mappings":";;;;;;AAAA;;;;;AAKA,cAAe,UAAEA,OAAF,EAAe;QACtBC,gBAAgB,sBAApB,CAD0B;QAEtBC,gBAAgB,sBAApB,CAF0B;;+BAIhBC,CAJgB;YAKlBC,eAAaD,CAAb,wBAAiCA,CAAjC,UAAJ,CALsB;YAMlBE,QAAQ,IAAIC,MAAJ,CAAYF,GAAZ,EAAiB,IAAjB,CAAZ;kBACUJ,QAAQO,OAAR,CAAiBF,KAAjB,EAAwB,UAAEG,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcC,KAAd,EAAqBC,GAArB,EAA8B;0BAChDT,CAAZ,SAAiBO,EAAjB,WAAyBP,CAAzB;SADM,CAAV;;;SAHE,IAAIA,IAAI,CAAd,EAAiBA,KAAK,CAAtB,EAAyBA,GAAzB,EAA+B;cAArBA,CAAqB;;cAOrBH,QAAQO,OAAR,CAAiBN,aAAjB,EAAgC,UAAEO,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcC,KAAd,EAAqBC,GAArB,EAA8B;wBACtDH,EAAd;KADM,CAAV;cAGUT,QAAQO,OAAR,CAAiBL,aAAjB,EAAgC,UAAEM,EAAF,EAAMC,EAAN,EAAUC,EAAV,EAAcC,KAAd,EAAqBC,GAArB,EAA6B;wBACrDH,EAAd;KADM,CAAV;WAGOT,OAAP;CAjBJ;;ACLA;;;GAIA;;ACJA,iBAAe,UAAEA,OAAF,EAAe;QACtBK,QAAQ,UAAZ;cACUL,QAAQO,OAAR,CAAiBF,KAAjB,EAAwB,UAAEG,EAAF,EAAMC,EAAN,EAAc;uBAC/BA,EAAb;KADM,CAAV;WAGOT,OAAP;CALJ;;ACAA,aAAe,UAAEA,OAAF,EAAe;QACtBK,QAAQ,MAAZ;YACQE,OAAR,CAAiBF,KAAjB,EAAwB,UAAEG,EAAF,EAAU;eACvB,MAAP;KADJ;WAGOR,OAAP;CALJ;;ACMA,aAAe,UAAEA,OAAF,EAAe;eACf,MAAX;cACUa,OAAQb,OAAR,CAAV;;cAEUc,UAAWd,OAAX,CAAV;cACUe,MAAOf,OAAP,CAAV;WACOA,OAAP;CANJ;;;;"}